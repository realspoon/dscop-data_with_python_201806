-- id/passwd
root
makeitso

-- envrionment
centos 7

-- install docs
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/ha-topology/ (멀티마스터 환경 설치)

-- env work [network virbr0 수정] : 이유: 마스터 및 워커노드등 구성을 위해서  
[root@station009 gitRepo]# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eno1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 # eno1 , hypervisor (kvm)
    link/ether c8:d9:d2:2b:d9:89 brd ff:ff:ff:ff:ff:ff
    inet 59.29.224.44/24 brd 59.29.224.255 scope global noprefixroute dynamic eno1
       valid_lft 80419sec preferred_lft 80419sec
    inet6 fe80::ff55:3ca0:956f:1dda/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
3: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default qlen 1000
    link/ether 52:54:00:80:2c:0d brd ff:ff:ff:ff:ff:ff
    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0 # 192.168.122.1/24 => 10.110
       valid_lft forever preferred_lft forever
4: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000
    link/ether 52:54:00:80:2c:0d brd ff:ff:ff:ff:ff:ff


ip address='10.100.0.254'
10.100.0.100
10.100.0.200

virsh net-destory default
virsh net-edit default
virsh net-start default

[root@station009 gitRepo]# ip addr
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eno1: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether c8:d9:d2:2b:d9:89 brd ff:ff:ff:ff:ff:ff
    inet 59.29.224.44/24 brd 59.29.224.255 scope global noprefixroute dynamic eno1
       valid_lft 79797sec preferred_lft 79797sec
    inet6 fe80::ff55:3ca0:956f:1dda/64 scope link noprefixroute 
       valid_lft forever preferred_lft forever
5: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default qlen 1000
    link/ether 52:54:00:80:2c:0d brd ff:ff:ff:ff:ff:ff
    inet 10.100.0.254/24 brd 10.100.0.255 scope global virbr0
       valid_lft forever preferred_lft forever
6: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000
    link/ether 52:54:00:80:2c:0d brd ff:ff:ff:ff:ff:ff

-- 7 page ~ 16 page : 환경구성
-- ssh key 생성 
ssh-keygen
ssh-copy-id lb # lb 

uname -r #kernal version check

https://docs.docker.com/install/linux/docker-ce/centos/


0. ssh key copy
ssh-keygen
ssh-copy-id lb # lb, docker, 


1. docker install # https://docs.docker.com/install/linux/docker-ce/centos/

yum install -y yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo -y
yum install docker-ce docker-ce-cli containerd.io -y
systemctl start docker && systemctl enable docker

2. install kubernetes # https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
ftp://59.29.224.77/pub
note.txt

2.1. kuberntes install
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

systemctl enable --now kubelet


cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system

# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/
3. Load Balancer
mkdir /etc/nginx

cat > /etc/nginx/nginx.conf
events { }
stream {
	upstream stream_backend {
		least_conn;
		server 10.100.0.11:6443;
		server 10.100.0.12:6443;
		server 10.100.0.13:6443;
	}
	server {
		listen 6443;
		proxy_pass stream_backend;
		proxy_timeout 3s;
		proxy_connect_timeout 1s;
	}
}

docker run --name proxy -v /etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro -p 6443:6443 -d nginx



4. HA cluster - 3 master + 3 work nodes
# mkdir /etc/kubernetes/kubeadm

# cat >  /etc/kubernetes/kubeadm/kubeadm-config.yaml
apiVersion: kubeadm.k8s.io/v1beta1
kind: ClusterConfiguration
kubernetesVersion: stable
controlPlaneEndpoint: "10.100.0.50:6443"



root : 리소스 인증, 계정 인증

-- 계정 인증 (담당자의 홈에 넣어줘야 함)
  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

-- master끼리 연결하기 위한 토근
kubeadm join 10.100.0.50:6443 --token 7s9wvn.cief1i974j536eqc \
    --discovery-token-ca-cert-hash sha256:15827ca9c2898969d0a652e9e2fe7896047a90a6a59ab02368f040c8c77ade4f \
    --experimental-control-plane --certificate-key 4fe9b4d4c375d1f7edea2744786e887beecb780c9bbcfae0e66f7acf4780a933
-- workernode 연결하기 위한 토근
kubeadm join 10.100.0.50:6443 --token 7s9wvn.cief1i974j536eqc \
    --discovery-token-ca-cert-hash sha256:15827ca9c2898969d0a652e9e2fe7896047a90a6a59ab02368f040c8c77ade4f    


[root@master11 ~]# kubectl get nodes
NAME                   STATUS     ROLES    AGE     VERSION
master11.example.com   NotReady   master   9m58s   v1.15.0
master12.example.com   NotReady   master   68s     v1.15.0
master13.example.com   NotReady   master   59s     v1.15.0
# vxlan으로 연결이 안되어있어서 not ready

-- vxlan 
weave
calico 는 192번 대역..설치가 안됨 podSubnet 추가해야함.